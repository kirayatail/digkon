 
cpldfit:  version P.28xd                            Xilinx Inc.
                                  Fitter Report
Design Name: recieve                             Date: 12- 6-2012,  2:58PM
Device Used: XC9572XL-5-PC44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
51 /72  ( 71%) 166 /360  ( 46%) 68 /216 ( 31%)   34 /72  ( 47%) 4  /34  ( 12%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1          13/18       21/54       35/90       1/ 9
FB2          14/18       21/54       35/90       1/ 9
FB3          16/18       14/54       80/90       2/ 9
FB4           8/18       12/54       16/90       0/ 7
             -----       -----       -----      -----    
             51/72       68/216     166/360      4/34 

* - Resource is exhausted

** Global Control Resources **

Signal 'clk' mapped onto global clock net GCK1.
Global output enable net(s) unused.
Signal 'reset' mapped onto global set/reset net GSR.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :    1           1    |  I/O              :     2      28
Output        :    1           1    |  GCK/IO           :     1       3
Bidirectional :    0           0    |  GTS/IO           :     0       2
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    1           1    |
                 ----        ----
        Total      4           4

** Power Data **

There are 51 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'recieve.ise'.
INFO:Cpld - Inferring BUFG constraint for signal 'clk' based upon the LOC
   constraint 'P5'. It is recommended that you declare this BUFG explicitedly in
   your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
*************************  Summary of Mapped Logic  ************************

** 1 Outputs **

Signal                                                Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                  Pts   Inps          No.  Type    Use     Mode Rate State
transmitter                                           2     2     FB3_8   13   I/O     O       STD  FAST RESET

** 50 Buried Nodes **

Signal                                                Total Total Loc     Pwr  Reg Init
Name                                                  Pts   Inps          Mode State
transmitter_mux0001/transmitter_mux0001_D2            19    11    FB1_1   STD  
x1/count<7>                                           1     7     FB1_6   STD  RESET
x1/count<6>                                           1     6     FB1_7   STD  RESET
x1/count<5>                                           1     5     FB1_8   STD  RESET
x1/count<4>                                           1     4     FB1_9   STD  RESET
x1/count<3>                                           1     3     FB1_10  STD  RESET
x1/count<2>                                           1     2     FB1_11  STD  RESET
x1/count<1>                                           1     1     FB1_12  STD  RESET
x1/count<0>                                           1     8     FB1_13  STD  RESET
en                                                    1     8     FB1_14  STD  RESET
state_tr<0>                                           2     2     FB1_15  STD  RESET
nstate_tr<4>/nstate_tr<4>_SETF                        2     5     FB1_16  STD  
nstate_tr<1>/nstate_tr<1>_SETF                        3     5     FB1_17  STD  
state_tr<4>                                           2     2     FB2_5   STD  RESET
state_tr<3>                                           2     2     FB2_6   STD  RESET
state_tr<2>                                           2     2     FB2_7   STD  RESET
state_tr<1>                                           2     2     FB2_8   STD  RESET
nstate_re<4>/nstate_re<4>_SETF                        2     5     FB2_9   STD  
state_re<4>                                           3     5     FB2_10  STD  RESET
state_re<3>                                           3     5     FB2_11  STD  RESET
state_re<2>                                           3     5     FB2_12  STD  RESET
state_re<1>                                           3     5     FB2_13  STD  RESET
state_re<0>                                           3     5     FB2_14  STD  RESET
nstate_re<2>                                          2     2     FB2_15  STD  RESET
nstate_re<0>                                          2     2     FB2_16  STD  RESET
buffert<3>                                            2     6     FB2_17  STD  RESET
nstate_re<2>/nstate_re<2>_SETF                        4     6     FB2_18  STD  
nstate_re<3>/nstate_re<3>_RSTF__$INT                  10    6     FB3_1   STD  
pause_and0000/pause_and0000_D2                        1     11    FB3_2   STD  
buffert<2>                                            2     6     FB3_3   STD  RESET
buffert<1>                                            2     6     FB3_4   STD  RESET
buffert<0>                                            2     6     FB3_5   STD  RESET
nstate_tr_mux0001<0>/nstate_tr_mux0001<0>_D2          5     11    FB3_6   STD  
nstate_re_or0000/nstate_re_or0000_D2                  5     6     FB3_7   STD  
nstate_re<3>/nstate_re<3>_SETF                        5     6     FB3_9   STD  
nstate_re<1>/nstate_re<1>_SETF                        5     6     FB3_10  STD  
pause                                                 6     12    FB3_11  STD  
nstate_re<1>/nstate_re<1>_RSTF                        6     6     FB3_12  STD  
nstate_tr<2>/nstate_tr<2>_RSTF                        7     11    FB3_14  STD  
nstate_re_mux0001<0>/nstate_re_mux0001<0>_D2          7     6     FB3_15  STD  

Signal                                                Total Total Loc     Pwr  Reg Init
Name                                                  Pts   Inps          Mode State
$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854  7     11    FB3_17  STD  
nstate_tr<3>/nstate_tr<3>_RSTF                        8     11    FB3_18  STD  
nstate_tr<4>                                          2     2     FB4_11  STD  RESET
nstate_tr<3>                                          2     2     FB4_12  STD  RESET
nstate_tr<2>                                          2     2     FB4_13  STD  RESET
nstate_tr<1>                                          2     2     FB4_14  STD  RESET
nstate_tr<0>                                          2     2     FB4_15  STD  RESET
nstate_re<4>                                          2     2     FB4_16  STD  RESET
nstate_re<3>                                          2     2     FB4_17  STD  RESET
nstate_re<1>                                          2     2     FB4_18  STD  RESET

** 3 Inputs **

Signal                                                Loc     Pin  Pin     Pin     
Name                                                          No.  Type    Use     
clk                                                   FB1_9   5    GCK/I/O GCK/I
reset                                                 FB2_9   39   GSR/I/O GSR/I
reciever                                              FB3_9   14   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               21/33
Number of signals used by logic mapping into function block:  21
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
transmitter_mux0001/transmitter_mux0001_D2
                     19      14<-   0   0     FB1_1         (b)     (b)
(unused)              0       0   /\5   0     FB1_2   1     I/O     (b)
(unused)              0       0   /\3   2     FB1_3         (b)     (b)
(unused)              0       0     0   5     FB1_4         (b)     
(unused)              0       0     0   5     FB1_5   2     I/O     
x1/count<7>           1       0     0   4     FB1_6   3     I/O     (b)
x1/count<6>           1       0     0   4     FB1_7         (b)     (b)
x1/count<5>           1       0     0   4     FB1_8   4     I/O     (b)
x1/count<4>           1       0     0   4     FB1_9   5     GCK/I/O GCK/I
x1/count<3>           1       0     0   4     FB1_10        (b)     (b)
x1/count<2>           1       0     0   4     FB1_11  6     GCK/I/O (b)
x1/count<1>           1       0     0   4     FB1_12        (b)     (b)
x1/count<0>           1       0     0   4     FB1_13        (b)     (b)
en                    1       0     0   4     FB1_14  7     GCK/I/O (b)
state_tr<0>           2       0     0   3     FB1_15  8     I/O     (b)
nstate_tr<4>/nstate_tr<4>_SETF
                      2       0     0   3     FB1_16        (b)     (b)
nstate_tr<1>/nstate_tr<1>_SETF
                      3       0   \/1   1     FB1_17  9     I/O     (b)
(unused)              0       0   \/5   0     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: buffert<0>         8: state_tr<0>       15: x1/count<1> 
  2: buffert<1>         9: state_tr<1>       16: x1/count<2> 
  3: buffert<2>        10: state_tr<2>       17: x1/count<3> 
  4: buffert<3>        11: state_tr<3>       18: x1/count<4> 
  5: clk               12: state_tr<4>       19: x1/count<5> 
  6: en                13: transmitter       20: x1/count<6> 
  7: nstate_tr<0>      14: x1/count<0>       21: x1/count<7> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
transmitter_mux0001/transmitter_mux0001_D2 
                     XXXXX..XXXXXX........................... 11
x1/count<7>          .............XXXXXXX.................... 7
x1/count<6>          .............XXXXXX..................... 6
x1/count<5>          .............XXXXX...................... 5
x1/count<4>          .............XXXX....................... 4
x1/count<3>          .............XXX........................ 3
x1/count<2>          .............XX......................... 2
x1/count<1>          .............X.......................... 1
x1/count<0>          .............XXXXXXXX................... 8
en                   .............XXXXXXXX................... 8
state_tr<0>          .....XX................................. 2
nstate_tr<4>/nstate_tr<4>_SETF 
                     .......XXXXX............................ 5
nstate_tr<1>/nstate_tr<1>_SETF 
                     .......XXXXX............................ 5
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               21/33
Number of signals used by logic mapping into function block:  21
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB2_1         (b)     
(unused)              0       0     0   5     FB2_2   35    I/O     
(unused)              0       0     0   5     FB2_3         (b)     
(unused)              0       0     0   5     FB2_4         (b)     
state_tr<4>           2       0     0   3     FB2_5   36    I/O     (b)
state_tr<3>           2       0     0   3     FB2_6   37    I/O     (b)
state_tr<2>           2       0     0   3     FB2_7         (b)     (b)
state_tr<1>           2       0     0   3     FB2_8   38    I/O     (b)
nstate_re<4>/nstate_re<4>_SETF
                      2       0     0   3     FB2_9   39    GSR/I/O GSR/I
state_re<4>           3       0     0   2     FB2_10        (b)     (b)
state_re<3>           3       0     0   2     FB2_11  40    GTS/I/O (b)
state_re<2>           3       0     0   2     FB2_12        (b)     (b)
state_re<1>           3       0     0   2     FB2_13        (b)     (b)
state_re<0>           3       0     0   2     FB2_14  42    GTS/I/O (b)
nstate_re<2>          2       0     0   3     FB2_15  43    I/O     (b)
nstate_re<0>          2       0     0   3     FB2_16        (b)     (b)
buffert<3>            2       0     0   3     FB2_17  44    I/O     (b)
nstate_re<2>/nstate_re<2>_SETF
                      4       0     0   1     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: en                               8: nstate_re_mux0001<0>/nstate_re_mux0001<0>_D2  15: reciever 
  2: nstate_re<0>                     9: nstate_re_or0000/nstate_re_or0000_D2          16: reset 
  3: nstate_re<1>                    10: nstate_tr<1>                                  17: state_re<0> 
  4: nstate_re<2>                    11: nstate_tr<2>                                  18: state_re<1> 
  5: nstate_re<2>/nstate_re<2>_SETF  12: nstate_tr<3>                                  19: state_re<2> 
  6: nstate_re<3>                    13: nstate_tr<4>                                  20: state_re<3> 
  7: nstate_re<4>                    14: pause                                         21: state_re<4> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
state_tr<4>          X...........X........................... 2
state_tr<3>          X..........X............................ 2
state_tr<2>          X.........X............................. 2
state_tr<1>          X........X.............................. 2
nstate_re<4>/nstate_re<4>_SETF 
                     ................XXXXX................... 5
state_re<4>          X.....X......X.X....X................... 5
state_re<3>          X....X.......X.X...X.................... 5
state_re<2>          X..X.........X.X..X..................... 5
state_re<1>          X.X..........X.X.X...................... 5
state_re<0>          XX...........X.XX....................... 5
nstate_re<2>         ....X...X............................... 2
nstate_re<0>         .......XX............................... 2
buffert<3>           ..............X.XXXXX................... 6
nstate_re<2>/nstate_re<2>_SETF 
                     ..............X.XXXXX................... 6
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               14/40
Number of signals used by logic mapping into function block:  14
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
nstate_re<3>/nstate_re<3>_RSTF__$INT
                     10       5<-   0   0     FB3_1         (b)     (b)
pause_and0000/pause_and0000_D2
                      1       1<- /\5   0     FB3_2   11    I/O     (b)
buffert<2>            2       0   /\1   2     FB3_3         (b)     (b)
buffert<1>            2       0     0   3     FB3_4         (b)     (b)
buffert<0>            2       0     0   3     FB3_5   12    I/O     (b)
nstate_tr_mux0001<0>/nstate_tr_mux0001<0>_D2
                      5       0     0   0     FB3_6         (b)     (b)
nstate_re_or0000/nstate_re_or0000_D2
                      5       0     0   0     FB3_7         (b)     (b)
transmitter           2       0   \/2   1     FB3_8   13    I/O     O
nstate_re<3>/nstate_re<3>_SETF
                      5       2<- \/2   0     FB3_9   14    I/O     I
nstate_re<1>/nstate_re<1>_SETF
                      5       2<- \/2   0     FB3_10        (b)     (b)
pause                 6       2<- \/1   0     FB3_11  18    I/O     (b)
nstate_re<1>/nstate_re<1>_RSTF
                      6       1<-   0   0     FB3_12        (b)     (b)
(unused)              0       0   \/4   1     FB3_13        (b)     (b)
nstate_tr<2>/nstate_tr<2>_RSTF
                      7       4<- \/2   0     FB3_14  19    I/O     (b)
nstate_re_mux0001<0>/nstate_re_mux0001<0>_D2
                      7       2<-   0   0     FB3_15  20    I/O     (b)
(unused)              0       0   \/5   0     FB3_16  24    I/O     (b)
$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854
                      7       5<- \/3   0     FB3_17  22    I/O     (b)
nstate_tr<3>/nstate_tr<3>_RSTF
                      8       3<-   0   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: pause                            6: state_re<2>       11: state_tr<2> 
  2: pause_and0000/pause_and0000_D2   7: state_re<3>       12: state_tr<3> 
  3: reciever                         8: state_re<4>       13: state_tr<4> 
  4: state_re<0>                      9: state_tr<0>       14: transmitter_mux0001/transmitter_mux0001_D2 
  5: state_re<1>                     10: state_tr<1>      

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
nstate_re<3>/nstate_re<3>_RSTF__$INT 
                     ..XXXXXX................................ 6
pause_and0000/pause_and0000_D2 
                     ..XXXXXXXXXXX........................... 11
buffert<2>           ..XXXXXX................................ 6
buffert<1>           ..XXXXXX................................ 6
buffert<0>           ..XXXXXX................................ 6
nstate_tr_mux0001<0>/nstate_tr_mux0001<0>_D2 
                     ..XXXXXXXXXXX........................... 11
nstate_re_or0000/nstate_re_or0000_D2 
                     ..XXXXXX................................ 6
transmitter          .X...........X.......................... 2
nstate_re<3>/nstate_re<3>_SETF 
                     ..XXXXXX................................ 6
nstate_re<1>/nstate_re<1>_SETF 
                     ..XXXXXX................................ 6
pause                X.XXXXXXXXXXX........................... 12
nstate_re<1>/nstate_re<1>_RSTF 
                     ..XXXXXX................................ 6
nstate_tr<2>/nstate_tr<2>_RSTF 
                     ..XXXXXXXXXXX........................... 11
nstate_re_mux0001<0>/nstate_re_mux0001<0>_D2 
                     ..XXXXXX................................ 6
$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 
                     ..XXXXXXXXXXX........................... 11
nstate_tr<3>/nstate_tr<3>_RSTF 
                     ..XXXXXXXXXXX........................... 11
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               12/42
Number of signals used by logic mapping into function block:  12
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB4_1         (b)     
(unused)              0       0     0   5     FB4_2   25    I/O     
(unused)              0       0     0   5     FB4_3         (b)     
(unused)              0       0     0   5     FB4_4         (b)     
(unused)              0       0     0   5     FB4_5   26    I/O     
(unused)              0       0     0   5     FB4_6         (b)     
(unused)              0       0     0   5     FB4_7         (b)     
(unused)              0       0     0   5     FB4_8   27    I/O     
(unused)              0       0     0   5     FB4_9         (b)     
(unused)              0       0     0   5     FB4_10        (b)     
nstate_tr<4>          2       0     0   3     FB4_11  28    I/O     (b)
nstate_tr<3>          2       0     0   3     FB4_12        (b)     (b)
nstate_tr<2>          2       0     0   3     FB4_13        (b)     (b)
nstate_tr<1>          2       0     0   3     FB4_14  29    I/O     (b)
nstate_tr<0>          2       0     0   3     FB4_15  33    I/O     (b)
nstate_re<4>          2       0     0   3     FB4_16        (b)     (b)
nstate_re<3>          2       0     0   3     FB4_17  34    I/O     (b)
nstate_re<1>          2       0     0   3     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854   5: nstate_re<3>/nstate_re<3>_SETF         9: nstate_tr<2>/nstate_tr<2>_RSTF 
  2: nstate_re<1>/nstate_re<1>_RSTF                         6: nstate_re<4>/nstate_re<4>_SETF        10: nstate_tr<3>/nstate_tr<3>_RSTF 
  3: nstate_re<1>/nstate_re<1>_SETF                         7: nstate_re_or0000/nstate_re_or0000_D2  11: nstate_tr<4>/nstate_tr<4>_SETF 
  4: nstate_re<3>/nstate_re<3>_RSTF__$INT                   8: nstate_tr<1>/nstate_tr<1>_SETF        12: nstate_tr_mux0001<0>/nstate_tr_mux0001<0>_D2 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
nstate_tr<4>         X.........X............................. 2
nstate_tr<3>         X........X.............................. 2
nstate_tr<2>         X.......X............................... 2
nstate_tr<1>         X......X................................ 2
nstate_tr<0>         X..........X............................ 2
nstate_re<4>         .....XX................................. 2
nstate_re<3>         ...XX................................... 2
nstate_re<1>         .XX..................................... 2
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 <= ((state_tr(0) AND NOT state_tr(4))
	OR (state_tr(3) AND NOT state_tr(4))
	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3))
	OR (NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
	state_tr(4))
	OR (NOT reciever AND NOT state_tr(4) AND state_re(1) AND 
	NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND state_re(4))
	OR (state_tr(1) AND NOT state_tr(4))
	OR (state_tr(2) AND NOT state_tr(4)));











FDCPE_buffert0: FDCPE port map (buffert(0),'0','0',buffert_CLR(0),buffert_PRE(0));
buffert_CLR(0) <= (NOT reciever AND state_re(1) AND state_re(2) AND 
	state_re(3) AND NOT state_re(0) AND NOT state_re(4));
buffert_PRE(0) <= (reciever AND state_re(1) AND state_re(2) AND 
	state_re(3) AND NOT state_re(0) AND NOT state_re(4));

FDCPE_buffert1: FDCPE port map (buffert(1),'0','0',buffert_CLR(1),buffert_PRE(1));
buffert_CLR(1) <= (NOT reciever AND state_re(1) AND state_re(2) AND 
	state_re(3) AND state_re(0) AND NOT state_re(4));
buffert_PRE(1) <= (reciever AND state_re(1) AND state_re(2) AND 
	state_re(3) AND state_re(0) AND NOT state_re(4));

FDCPE_buffert2: FDCPE port map (buffert(2),'0','0',buffert_CLR(2),buffert_PRE(2));
buffert_CLR(2) <= (NOT reciever AND NOT state_re(1) AND NOT state_re(2) AND 
	NOT state_re(3) AND NOT state_re(0) AND state_re(4));
buffert_PRE(2) <= (reciever AND NOT state_re(1) AND NOT state_re(2) AND 
	NOT state_re(3) AND NOT state_re(0) AND state_re(4));

FDCPE_buffert3: FDCPE port map (buffert(3),'0','0',buffert_CLR(3),buffert_PRE(3));
buffert_CLR(3) <= (NOT reciever AND NOT state_re(1) AND NOT state_re(2) AND 
	NOT state_re(3) AND state_re(0) AND state_re(4));
buffert_PRE(3) <= (reciever AND NOT state_re(1) AND NOT state_re(2) AND 
	NOT state_re(3) AND state_re(0) AND state_re(4));

FDCPE_en: FDCPE port map (en,en_D,clk,NOT reset,'0');
en_D <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
	x1/count(3) AND x1/count(4) AND x1/count(5) AND x1/count(6) AND 
	x1/count(7));

FDCPE_nstate_re0: FDCPE port map (nstate_re(0),'0','0',nstate_re_CLR(0),nstate_re_PRE(0));
nstate_re_CLR(0) <= (NOT nstate_re_mux0001(0)/nstate_re_mux0001(0)_D2 AND 
	NOT nstate_re_or0000/nstate_re_or0000_D2);
nstate_re_PRE(0) <= (nstate_re_mux0001(0)/nstate_re_mux0001(0)_D2 AND 
	NOT nstate_re_or0000/nstate_re_or0000_D2);

FDCPE_nstate_re1: FDCPE port map (nstate_re(1),'0','0',nstate_re(1)/nstate_re(1)_RSTF,nstate_re(1)/nstate_re(1)_SETF);


nstate_re(1)/nstate_re(1)_RSTF <= ((NOT reciever AND NOT state_re(2) AND NOT state_re(3) AND 
	NOT state_re(0) AND state_re(4))
	OR (NOT reciever AND state_re(0) AND NOT state_re(4))
	OR (state_re(1) AND state_re(0) AND NOT state_re(4))
	OR (NOT reciever AND NOT state_re(1) AND state_re(2) AND 
	NOT state_re(4))
	OR (NOT reciever AND NOT state_re(1) AND state_re(3) AND 
	NOT state_re(4))
	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
	NOT state_re(0) AND state_re(4)));


nstate_re(1)/nstate_re(1)_SETF <= ((state_re(1) AND NOT state_re(0) AND NOT state_re(4))
	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
	state_re(0) AND state_re(4))
	OR (reciever AND NOT state_re(1) AND state_re(2) AND 
	NOT state_re(4))
	OR (reciever AND NOT state_re(1) AND state_re(3) AND 
	NOT state_re(4))
	OR (reciever AND NOT state_re(1) AND state_re(0) AND 
	NOT state_re(4)));

FDCPE_nstate_re2: FDCPE port map (nstate_re(2),'0','0',nstate_re_CLR(2),nstate_re(2)/nstate_re(2)_SETF);
nstate_re_CLR(2) <= (NOT nstate_re_or0000/nstate_re_or0000_D2 AND 
	NOT nstate_re(2)/nstate_re(2)_SETF);


nstate_re(2)/nstate_re(2)_SETF <= ((NOT reciever AND state_re(2) AND NOT state_re(0) AND 
	NOT state_re(4))
	OR (reciever AND state_re(1) AND NOT state_re(2) AND 
	state_re(0) AND NOT state_re(4))
	OR (reciever AND NOT state_re(1) AND state_re(2) AND 
	state_re(0) AND NOT state_re(4))
	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
	NOT state_re(0) AND NOT state_re(4)));

FDCPE_nstate_re3: FDCPE port map (nstate_re(3),'0','0',NOT nstate_re(3)/nstate_re(3)_RSTF__$INT,nstate_re(3)/nstate_re(3)_SETF);


nstate_re(3)/nstate_re(3)_RSTF__$INT <= ((reciever AND state_re(1) AND state_re(4))
	OR (state_re(1) AND state_re(0) AND state_re(4))
	OR (reciever AND NOT state_re(1) AND state_re(3) AND 
	state_re(0))
	OR (reciever AND NOT state_re(2) AND state_re(3) AND 
	state_re(0))
	OR (reciever AND state_re(1) AND state_re(2) AND 
	NOT state_re(3) AND state_re(0))
	OR (state_re(2) AND state_re(4))
	OR (state_re(3) AND state_re(4))
	OR (NOT reciever AND state_re(3) AND NOT state_re(0))
	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
	NOT state_re(0))
	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
	NOT state_re(0) AND NOT state_re(4)));


nstate_re(3)/nstate_re(3)_SETF <= ((reciever AND NOT state_re(1) AND state_re(3) AND 
	state_re(0) AND NOT state_re(4))
	OR (reciever AND NOT state_re(2) AND state_re(3) AND 
	state_re(0) AND NOT state_re(4))
	OR (NOT reciever AND state_re(3) AND NOT state_re(0) AND 
	NOT state_re(4))
	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
	NOT state_re(0) AND NOT state_re(4))
	OR (reciever AND state_re(1) AND state_re(2) AND 
	NOT state_re(3) AND state_re(0) AND NOT state_re(4)));

FDCPE_nstate_re4: FDCPE port map (nstate_re(4),'0','0',nstate_re_CLR(4),nstate_re(4)/nstate_re(4)_SETF);
nstate_re_CLR(4) <= (NOT nstate_re_or0000/nstate_re_or0000_D2 AND 
	NOT nstate_re(4)/nstate_re(4)_SETF);


nstate_re(4)/nstate_re(4)_SETF <= ((NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
	state_re(4))
	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
	state_re(0) AND NOT state_re(4)));


nstate_re_mux0001(0)/nstate_re_mux0001(0)_D2 <= ((NOT reciever AND state_re(2) AND NOT state_re(3) AND 
	NOT state_re(4))
	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
	NOT state_re(0) AND NOT state_re(4))
	OR (NOT reciever AND state_re(1) AND NOT state_re(3) AND 
	NOT state_re(4))
	OR (NOT reciever AND NOT state_re(1) AND state_re(3) AND 
	NOT state_re(4))
	OR (NOT reciever AND NOT state_re(2) AND state_re(3) AND 
	NOT state_re(4))
	OR (NOT reciever AND NOT state_re(3) AND state_re(0) AND 
	NOT state_re(4))
	OR (NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND 
	state_re(4)));


nstate_re_or0000/nstate_re_or0000_D2 <= ((state_re(2) AND state_re(4))
	OR (state_re(3) AND state_re(4))
	OR (reciever AND state_re(1) AND state_re(4))
	OR (state_re(1) AND state_re(0) AND state_re(4))
	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
	NOT state_re(0) AND NOT state_re(4)));

FDCPE_nstate_tr0: FDCPE port map (nstate_tr(0),'0','0',nstate_tr_CLR(0),nstate_tr_mux0001(0)/nstate_tr_mux0001(0)_D2);
nstate_tr_CLR(0) <= (NOT nstate_tr_mux0001(0)/nstate_tr_mux0001(0)_D2 AND 
	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854);


nstate_tr(1)/nstate_tr(1)_SETF <= ((state_tr(0) AND NOT state_tr(1) AND NOT state_tr(4))
	OR (NOT state_tr(0) AND state_tr(1) AND NOT state_tr(4))
	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3)));

FDCPE_nstate_tr1: FDCPE port map (nstate_tr(1),'0','0',nstate_tr_CLR(1),nstate_tr(1)/nstate_tr(1)_SETF);
nstate_tr_CLR(1) <= (
	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(1)/nstate_tr(1)_SETF);


nstate_tr(2)/nstate_tr(2)_RSTF <= ((state_tr(0) AND state_tr(1) AND state_tr(2) AND 
	NOT state_tr(4))
	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3))
	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(4))
	OR (NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
	state_tr(4))
	OR (NOT state_tr(0) AND state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(4))
	OR (NOT state_tr(0) AND NOT state_tr(2) AND state_tr(3) AND 
	NOT state_tr(4))
	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(2) AND 
	NOT state_tr(4) AND state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
	NOT state_re(0) AND state_re(4)));

FDCPE_nstate_tr2: FDCPE port map (nstate_tr(2),'0','0',nstate_tr(2)/nstate_tr(2)_RSTF,nstate_tr_PRE(2));
nstate_tr_PRE(2) <= (
	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(2)/nstate_tr(2)_RSTF);


nstate_tr(3)/nstate_tr(3)_RSTF <= ((state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3))
	OR (state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
	NOT state_tr(4))
	OR (state_tr(0) AND state_tr(1) AND state_tr(2) AND 
	state_tr(3) AND NOT state_tr(4))
	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(3) AND 
	NOT state_tr(4))
	OR (NOT state_tr(0) AND state_tr(1) AND NOT state_tr(3) AND 
	NOT state_tr(4))
	OR (NOT state_tr(0) AND state_tr(2) AND NOT state_tr(3) AND 
	NOT state_tr(4))
	OR (NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
	state_tr(4))
	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(3) AND 
	NOT state_tr(4) AND state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
	NOT state_re(0) AND state_re(4)));

FDCPE_nstate_tr3: FDCPE port map (nstate_tr(3),'0','0',nstate_tr(3)/nstate_tr(3)_RSTF,nstate_tr_PRE(3));
nstate_tr_PRE(3) <= (
	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(3)/nstate_tr(3)_RSTF);

FDCPE_nstate_tr4: FDCPE port map (nstate_tr(4),'0','0',nstate_tr_CLR(4),nstate_tr(4)/nstate_tr(4)_SETF);
nstate_tr_CLR(4) <= (
	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(4)/nstate_tr(4)_SETF);


nstate_tr(4)/nstate_tr(4)_SETF <= ((NOT state_tr(1) AND NOT state_tr(2) AND NOT state_tr(3) AND 
	state_tr(4))
	OR (state_tr(0) AND state_tr(1) AND state_tr(2) AND 
	state_tr(3) AND NOT state_tr(4)));


nstate_tr_mux0001(0)/nstate_tr_mux0001(0)_D2 <= ((NOT state_tr(0) AND state_tr(1) AND NOT state_tr(4))
	OR (NOT state_tr(0) AND state_tr(2) AND NOT state_tr(4))
	OR (NOT state_tr(0) AND state_tr(3) AND NOT state_tr(4))
	OR (NOT state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3) AND state_tr(4))
	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(4) AND 
	state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND 
	state_re(4)));


pause <= ((NOT state_tr(4) AND pause)
	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(1) AND 
	NOT state_tr(2) AND NOT state_tr(3) AND NOT state_tr(4) AND state_re(1) AND 
	NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND state_re(4))
	OR (state_tr(0) AND pause)
	OR (NOT state_tr(1) AND pause)
	OR (state_tr(2) AND pause)
	OR (state_tr(3) AND pause));


pause_and0000/pause_and0000_D2 <= (NOT reciever AND NOT state_tr(0) AND NOT state_tr(1) AND 
	NOT state_tr(2) AND NOT state_tr(3) AND NOT state_tr(4) AND state_re(1) AND 
	NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND state_re(4));

FDCPE_state_re0: FDCPE port map (state_re(0),state_re_D(0),clk,'0','0');
state_re_D(0) <= ((reset AND NOT state_re(0) AND NOT en)
	OR (reset AND NOT state_re(0) AND pause)
	OR (en AND NOT pause AND NOT nstate_re(0)));

FDCPE_state_re1: FDCPE port map (state_re(1),state_re_D(1),clk,'0','0');
state_re_D(1) <= ((reset AND state_re(1) AND NOT en)
	OR (reset AND state_re(1) AND pause)
	OR (en AND NOT pause AND nstate_re(1)));

FDCPE_state_re2: FDCPE port map (state_re(2),state_re_D(2),clk,'0','0');
state_re_D(2) <= ((reset AND state_re(2) AND NOT en)
	OR (reset AND state_re(2) AND pause)
	OR (en AND NOT pause AND nstate_re(2)));

FDCPE_state_re3: FDCPE port map (state_re(3),state_re_D(3),clk,'0','0');
state_re_D(3) <= ((reset AND state_re(3) AND NOT en)
	OR (reset AND state_re(3) AND pause)
	OR (en AND NOT pause AND nstate_re(3)));

FDCPE_state_re4: FDCPE port map (state_re(4),state_re_D(4),clk,'0','0');
state_re_D(4) <= ((reset AND state_re(4) AND NOT en)
	OR (reset AND state_re(4) AND pause)
	OR (en AND NOT pause AND nstate_re(4)));

FDCPE_state_tr0: FDCPE port map (state_tr(0),nstate_tr(0),clk,NOT reset,'0',en);

FDCPE_state_tr1: FDCPE port map (state_tr(1),nstate_tr(1),clk,NOT reset,'0',en);

FDCPE_state_tr2: FDCPE port map (state_tr(2),nstate_tr(2),clk,NOT reset,'0',en);

FDCPE_state_tr3: FDCPE port map (state_tr(3),nstate_tr(3),clk,NOT reset,'0',en);

FDCPE_state_tr4: FDCPE port map (state_tr(4),nstate_tr(4),clk,NOT reset,'0',en);

FDCPE_transmitter: FDCPE port map (transmitter,'0','0',transmitter_CLR,transmitter_PRE);
transmitter_CLR <= (NOT transmitter_mux0001/transmitter_mux0001_D2 AND 
	NOT pause_and0000/pause_and0000_D2);
transmitter_PRE <= (transmitter_mux0001/transmitter_mux0001_D2 AND 
	NOT pause_and0000/pause_and0000_D2);


transmitter_mux0001/transmitter_mux0001_D2 <= ((EXP7_.EXP)
	OR (clk AND NOT state_tr(0) AND state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3))
	OR (clk AND NOT state_tr(0) AND NOT state_tr(1) AND state_tr(3) AND 
	NOT state_tr(4))
	OR (clk AND NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
	state_tr(4) AND NOT buffert(2))
	OR (NOT clk AND state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3) AND buffert(3))
	OR (NOT state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
	NOT state_tr(3) AND NOT state_tr(4) AND transmitter)
	OR (nstate_tr(1)/nstate_tr(1)_SETF.EXP)
	OR (NOT clk AND state_tr(0) AND NOT state_tr(1) AND NOT state_tr(4))
	OR (NOT clk AND state_tr(0) AND NOT state_tr(4) AND buffert(1))
	OR (clk AND NOT state_tr(0) AND state_tr(2) AND NOT state_tr(3) AND 
	NOT state_tr(4))
	OR (clk AND NOT state_tr(0) AND NOT state_tr(2) AND state_tr(3) AND 
	NOT state_tr(4))
	OR (clk AND NOT state_tr(0) AND state_tr(3) AND NOT state_tr(4) AND 
	NOT buffert(0))
	OR (state_tr(2) AND state_tr(4) AND transmitter)
	OR (state_tr(3) AND state_tr(4) AND transmitter)
	OR (NOT clk AND state_tr(0) AND NOT state_tr(2) AND NOT state_tr(4))
	OR (NOT clk AND state_tr(0) AND NOT state_tr(3) AND NOT state_tr(4))
	OR (state_tr(0) AND state_tr(1) AND state_tr(4) AND 
	transmitter));

FTCPE_x1/count0: FTCPE port map (x1/count(0),x1/count_T(0),clk,'0',NOT reset);
x1/count_T(0) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
	x1/count(3) AND x1/count(4) AND x1/count(5) AND x1/count(6) AND 
	x1/count(7));

FTCPE_x1/count1: FTCPE port map (x1/count(1),x1/count(0),clk,NOT reset,'0');

FTCPE_x1/count2: FTCPE port map (x1/count(2),x1/count_T(2),clk,NOT reset,'0');
x1/count_T(2) <= (x1/count(0) AND x1/count(1));

FTCPE_x1/count3: FTCPE port map (x1/count(3),x1/count_T(3),clk,NOT reset,'0');
x1/count_T(3) <= (x1/count(0) AND x1/count(1) AND x1/count(2));

FTCPE_x1/count4: FTCPE port map (x1/count(4),x1/count_T(4),clk,NOT reset,'0');
x1/count_T(4) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
	x1/count(3));

FTCPE_x1/count5: FTCPE port map (x1/count(5),x1/count_T(5),clk,NOT reset,'0');
x1/count_T(5) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
	x1/count(3) AND x1/count(4));

FTCPE_x1/count6: FTCPE port map (x1/count(6),x1/count_T(6),clk,NOT reset,'0');
x1/count_T(6) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
	x1/count(3) AND x1/count(4) AND x1/count(5));

FTCPE_x1/count7: FTCPE port map (x1/count(7),x1/count_T(7),clk,NOT reset,'0');
x1/count_T(7) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
	x1/count(3) AND x1/count(4) AND x1/count(5) AND x1/count(6));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC9572XL-5-PC44


   --------------------------------  
  /6  5  4  3  2  1  44 43 42 41 40 \
 | 7                             39 | 
 | 8                             38 | 
 | 9                             37 | 
 | 10                            36 | 
 | 11        XC9572XL-5-PC44     35 | 
 | 12                            34 | 
 | 13                            33 | 
 | 14                            32 | 
 | 15                            31 | 
 | 16                            30 | 
 | 17                            29 | 
 \ 18 19 20 21 22 23 24 25 26 27 28 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 KPR                              23 GND                           
  2 KPR                              24 KPR                           
  3 KPR                              25 KPR                           
  4 KPR                              26 KPR                           
  5 clk                              27 KPR                           
  6 KPR                              28 KPR                           
  7 KPR                              29 KPR                           
  8 KPR                              30 TDO                           
  9 KPR                              31 GND                           
 10 GND                              32 VCC                           
 11 KPR                              33 KPR                           
 12 KPR                              34 KPR                           
 13 transmitter                      35 KPR                           
 14 reciever                         36 KPR                           
 15 TDI                              37 KPR                           
 16 TMS                              38 KPR                           
 17 TCK                              39 reset                         
 18 KPR                              40 KPR                           
 19 KPR                              41 VCC                           
 20 KPR                              42 KPR                           
 21 VCC                              43 KPR                           
 22 KPR                              44 KPR                           


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc9572xl-5-PC44
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 25
