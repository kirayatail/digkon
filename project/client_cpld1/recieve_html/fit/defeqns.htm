<html><head><link type='text/css' href='style.css' rel='stylesheet'></head><body class='pgBgnd'>
<h3 align='center'>Equations</h3>
<table width='90%' align='center' border='1' cellpadding='0' cellspacing='0'>
<tr><td>
</td></tr><tr><td>
********** Mapped Logic **********
</td></tr><tr><td>
</td></tr><tr><td>
$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 <= ((state_tr(0) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(3) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_tr(4) AND state_re(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(1) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(2) AND NOT state_tr(4)));
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
FDCPE_buffert0: FDCPE port map (buffert(0),'0','0',buffert_CLR(0),buffert_PRE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_CLR(0) <= (NOT reciever AND state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(3) AND NOT state_re(0) AND NOT state_re(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_PRE(0) <= (reciever AND state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(3) AND NOT state_re(0) AND NOT state_re(4));
</td></tr><tr><td>
FDCPE_buffert1: FDCPE port map (buffert(1),'0','0',buffert_CLR(1),buffert_PRE(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_CLR(1) <= (NOT reciever AND state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(3) AND state_re(0) AND NOT state_re(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_PRE(1) <= (reciever AND state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(3) AND state_re(0) AND NOT state_re(4));
</td></tr><tr><td>
FDCPE_buffert2: FDCPE port map (buffert(2),'0','0',buffert_CLR(2),buffert_PRE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_CLR(2) <= (NOT reciever AND NOT state_re(1) AND NOT state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(3) AND NOT state_re(0) AND state_re(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_PRE(2) <= (reciever AND NOT state_re(1) AND NOT state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(3) AND NOT state_re(0) AND state_re(4));
</td></tr><tr><td>
FDCPE_buffert3: FDCPE port map (buffert(3),'0','0',buffert_CLR(3),buffert_PRE(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_CLR(3) <= (NOT reciever AND NOT state_re(1) AND NOT state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(3) AND state_re(0) AND state_re(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffert_PRE(3) <= (reciever AND NOT state_re(1) AND NOT state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(3) AND state_re(0) AND state_re(4));
</td></tr><tr><td>
FDCPE_en: FDCPE port map (en,en_D,clk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;en_D <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(3) AND x1/count(4) AND x1/count(5) AND x1/count(6) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(7));
</td></tr><tr><td>
FDCPE_nstate_re0: FDCPE port map (nstate_re(0),'0','0',nstate_re_CLR(0),nstate_re_PRE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_re_CLR(0) <= (NOT nstate_re_mux0001(0)/nstate_re_mux0001(0)_D2 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT nstate_re_or0000/nstate_re_or0000_D2);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_re_PRE(0) <= (nstate_re_mux0001(0)/nstate_re_mux0001(0)_D2 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT nstate_re_or0000/nstate_re_or0000_D2);
</td></tr><tr><td>
FDCPE_nstate_re1: FDCPE port map (nstate_re(1),'0','0',nstate_re(1)/nstate_re(1)_RSTF,nstate_re(1)/nstate_re(1)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re(1)/nstate_re(1)_RSTF <= ((NOT reciever AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_re(1) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND state_re(4)));
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re(1)/nstate_re(1)_SETF <= ((state_re(1) AND NOT state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND NOT state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND NOT state_re(1) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND NOT state_re(1) AND state_re(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4)));
</td></tr><tr><td>
FDCPE_nstate_re2: FDCPE port map (nstate_re(2),'0','0',nstate_re_CLR(2),nstate_re(2)/nstate_re(2)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_re_CLR(2) <= (NOT nstate_re_or0000/nstate_re_or0000_D2 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT nstate_re(2)/nstate_re(2)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re(2)/nstate_re(2)_SETF <= ((NOT reciever AND state_re(2) AND NOT state_re(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND state_re(1) AND NOT state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND NOT state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND NOT state_re(4)));
</td></tr><tr><td>
FDCPE_nstate_re3: FDCPE port map (nstate_re(3),'0','0',NOT nstate_re(3)/nstate_re(3)_RSTF__$INT,nstate_re(3)/nstate_re(3)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re(3)/nstate_re(3)_RSTF__$INT <= ((reciever AND state_re(1) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(0) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND NOT state_re(1) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND NOT state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(3) AND state_re(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(2) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(3) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND state_re(3) AND NOT state_re(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND NOT state_re(4)));
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re(3)/nstate_re(3)_SETF <= ((reciever AND NOT state_re(1) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND NOT state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND state_re(3) AND NOT state_re(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND state_re(1) AND state_re(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(3) AND state_re(0) AND NOT state_re(4)));
</td></tr><tr><td>
FDCPE_nstate_re4: FDCPE port map (nstate_re(4),'0','0',nstate_re_CLR(4),nstate_re(4)/nstate_re(4)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_re_CLR(4) <= (NOT nstate_re_or0000/nstate_re_or0000_D2 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT nstate_re(4)/nstate_re(4)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re(4)/nstate_re(4)_SETF <= ((NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(0) AND NOT state_re(4)));
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re_mux0001(0)/nstate_re_mux0001(0)_D2 <= ((NOT reciever AND state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND state_re(1) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_re(1) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_re(2) AND state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_re(3) AND state_re(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(4)));
</td></tr><tr><td>
</td></tr><tr><td>
nstate_re_or0000/nstate_re_or0000_D2 <= ((state_re(2) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(3) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reciever AND state_re(1) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_re(1) AND state_re(0) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND NOT state_re(4)));
</td></tr><tr><td>
FDCPE_nstate_tr0: FDCPE port map (nstate_tr(0),'0','0',nstate_tr_CLR(0),nstate_tr_mux0001(0)/nstate_tr_mux0001(0)_D2);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_tr_CLR(0) <= (NOT nstate_tr_mux0001(0)/nstate_tr_mux0001(0)_D2 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_tr(1)/nstate_tr(1)_SETF <= ((state_tr(0) AND NOT state_tr(1) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND state_tr(1) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3)));
</td></tr><tr><td>
FDCPE_nstate_tr1: FDCPE port map (nstate_tr(1),'0','0',nstate_tr_CLR(1),nstate_tr(1)/nstate_tr(1)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_tr_CLR(1) <= (
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(1)/nstate_tr(1)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_tr(2)/nstate_tr(2)_RSTF <= ((state_tr(0) AND state_tr(1) AND state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND NOT state_tr(2) AND state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4) AND state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND state_re(4)));
</td></tr><tr><td>
FDCPE_nstate_tr2: FDCPE port map (nstate_tr(2),'0','0',nstate_tr(2)/nstate_tr(2)_RSTF,nstate_tr_PRE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_tr_PRE(2) <= (
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(2)/nstate_tr(2)_RSTF);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_tr(3)/nstate_tr(3)_RSTF <= ((state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND state_tr(1) AND state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_tr(3) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND NOT state_tr(1) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND state_tr(1) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4) AND state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(0) AND state_re(4)));
</td></tr><tr><td>
FDCPE_nstate_tr3: FDCPE port map (nstate_tr(3),'0','0',nstate_tr(3)/nstate_tr(3)_RSTF,nstate_tr_PRE(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_tr_PRE(3) <= (
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(3)/nstate_tr(3)_RSTF);
</td></tr><tr><td>
FDCPE_nstate_tr4: FDCPE port map (nstate_tr(4),'0','0',nstate_tr_CLR(4),nstate_tr(4)/nstate_tr(4)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nstate_tr_CLR(4) <= (
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	$OpTx$nstate_tr_and0000/nstate_tr_and0000_D2_INV$854 AND NOT nstate_tr(4)/nstate_tr(4)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
nstate_tr(4)/nstate_tr(4)_SETF <= ((NOT state_tr(1) AND NOT state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND state_tr(1) AND state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_tr(3) AND NOT state_tr(4)));
</td></tr><tr><td>
</td></tr><tr><td>
nstate_tr_mux0001(0)/nstate_tr_mux0001(0)_D2 <= ((NOT state_tr(0) AND state_tr(1) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND state_tr(2) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND state_tr(3) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3) AND state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(1) AND NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_re(4)));
</td></tr><tr><td>
</td></tr><tr><td>
pause <= ((NOT state_tr(4) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT reciever AND NOT state_tr(0) AND NOT state_tr(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(2) AND NOT state_tr(3) AND NOT state_tr(4) AND state_re(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND state_re(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(1) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(2) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(3) AND pause));
</td></tr><tr><td>
</td></tr><tr><td>
pause_and0000/pause_and0000_D2 <= (NOT reciever AND NOT state_tr(0) AND NOT state_tr(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(2) AND NOT state_tr(3) AND NOT state_tr(4) AND state_re(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_re(2) AND NOT state_re(3) AND NOT state_re(0) AND state_re(4));
</td></tr><tr><td>
FDCPE_state_re0: FDCPE port map (state_re(0),state_re_D(0),clk,'0','0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state_re_D(0) <= ((reset AND NOT state_re(0) AND NOT en)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reset AND NOT state_re(0) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (en AND NOT pause AND NOT nstate_re(0)));
</td></tr><tr><td>
FDCPE_state_re1: FDCPE port map (state_re(1),state_re_D(1),clk,'0','0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state_re_D(1) <= ((reset AND state_re(1) AND NOT en)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reset AND state_re(1) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (en AND NOT pause AND nstate_re(1)));
</td></tr><tr><td>
FDCPE_state_re2: FDCPE port map (state_re(2),state_re_D(2),clk,'0','0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state_re_D(2) <= ((reset AND state_re(2) AND NOT en)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reset AND state_re(2) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (en AND NOT pause AND nstate_re(2)));
</td></tr><tr><td>
FDCPE_state_re3: FDCPE port map (state_re(3),state_re_D(3),clk,'0','0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state_re_D(3) <= ((reset AND state_re(3) AND NOT en)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reset AND state_re(3) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (en AND NOT pause AND nstate_re(3)));
</td></tr><tr><td>
FDCPE_state_re4: FDCPE port map (state_re(4),state_re_D(4),clk,'0','0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state_re_D(4) <= ((reset AND state_re(4) AND NOT en)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (reset AND state_re(4) AND pause)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (en AND NOT pause AND nstate_re(4)));
</td></tr><tr><td>
FDCPE_state_tr0: FDCPE port map (state_tr(0),nstate_tr(0),clk,NOT reset,'0',en);
</td></tr><tr><td>
FDCPE_state_tr1: FDCPE port map (state_tr(1),nstate_tr(1),clk,NOT reset,'0',en);
</td></tr><tr><td>
FDCPE_state_tr2: FDCPE port map (state_tr(2),nstate_tr(2),clk,NOT reset,'0',en);
</td></tr><tr><td>
FDCPE_state_tr3: FDCPE port map (state_tr(3),nstate_tr(3),clk,NOT reset,'0',en);
</td></tr><tr><td>
FDCPE_state_tr4: FDCPE port map (state_tr(4),nstate_tr(4),clk,NOT reset,'0',en);
</td></tr><tr><td>
FDCPE_transmitter: FDCPE port map (transmitter,'0','0',transmitter_CLR,transmitter_PRE);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transmitter_CLR <= (NOT transmitter_mux0001/transmitter_mux0001_D2 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT pause_and0000/pause_and0000_D2);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transmitter_PRE <= (transmitter_mux0001/transmitter_mux0001_D2 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT pause_and0000/pause_and0000_D2);
</td></tr><tr><td>
</td></tr><tr><td>
transmitter_mux0001/transmitter_mux0001_D2 <= ((EXP7_.EXP)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (clk AND NOT state_tr(0) AND state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (clk AND NOT state_tr(0) AND NOT state_tr(1) AND state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (clk AND NOT state_tr(0) AND NOT state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state_tr(4) AND NOT buffert(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT clk AND state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3) AND buffert(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT state_tr(0) AND NOT state_tr(1) AND NOT state_tr(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(3) AND NOT state_tr(4) AND transmitter)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (nstate_tr(1)/nstate_tr(1)_SETF.EXP)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT clk AND state_tr(0) AND NOT state_tr(1) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT clk AND state_tr(0) AND NOT state_tr(4) AND buffert(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (clk AND NOT state_tr(0) AND state_tr(2) AND NOT state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (clk AND NOT state_tr(0) AND NOT state_tr(2) AND state_tr(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (clk AND NOT state_tr(0) AND state_tr(3) AND NOT state_tr(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT buffert(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(2) AND state_tr(4) AND transmitter)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(3) AND state_tr(4) AND transmitter)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT clk AND state_tr(0) AND NOT state_tr(2) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT clk AND state_tr(0) AND NOT state_tr(3) AND NOT state_tr(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (state_tr(0) AND state_tr(1) AND state_tr(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	transmitter));
</td></tr><tr><td>
FTCPE_x1/count0: FTCPE port map (x1/count(0),x1/count_T(0),clk,'0',NOT reset);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1/count_T(0) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(3) AND x1/count(4) AND x1/count(5) AND x1/count(6) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(7));
</td></tr><tr><td>
FTCPE_x1/count1: FTCPE port map (x1/count(1),x1/count(0),clk,NOT reset,'0');
</td></tr><tr><td>
FTCPE_x1/count2: FTCPE port map (x1/count(2),x1/count_T(2),clk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1/count_T(2) <= (x1/count(0) AND x1/count(1));
</td></tr><tr><td>
FTCPE_x1/count3: FTCPE port map (x1/count(3),x1/count_T(3),clk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1/count_T(3) <= (x1/count(0) AND x1/count(1) AND x1/count(2));
</td></tr><tr><td>
FTCPE_x1/count4: FTCPE port map (x1/count(4),x1/count_T(4),clk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1/count_T(4) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(3));
</td></tr><tr><td>
FTCPE_x1/count5: FTCPE port map (x1/count(5),x1/count_T(5),clk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1/count_T(5) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(3) AND x1/count(4));
</td></tr><tr><td>
FTCPE_x1/count6: FTCPE port map (x1/count(6),x1/count_T(6),clk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1/count_T(6) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(3) AND x1/count(4) AND x1/count(5));
</td></tr><tr><td>
FTCPE_x1/count7: FTCPE port map (x1/count(7),x1/count_T(7),clk,NOT reset,'0');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1/count_T(7) <= (x1/count(0) AND x1/count(1) AND x1/count(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	x1/count(3) AND x1/count(4) AND x1/count(5) AND x1/count(6));
</td></tr><tr><td>
Register Legend:
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FDCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FTCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LDCP  (Q,D,G,CLR,PRE); 
</td></tr><tr><td>
</td></tr>
</table>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
